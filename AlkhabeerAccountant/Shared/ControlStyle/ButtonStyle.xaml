<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"   
                    >
    <ObjectDataProvider x:Key="StringComparer"
                    ObjectType="{x:Type sys:StringComparer}"
                    MethodName="OrdinalIgnoreCase" />
    <!-- ================= General Button Colors =============== -->
    <SolidColorBrush x:Key="GeneralButtonBackgroundColor" Color="{StaticResource PrimaryLightColor}" />
    <SolidColorBrush x:Key="GeneralButtonForegroundColor" Color="{StaticResource TextPrimaryColor}" />

    <!-- 🔹 Rounded Button Template -->
    <Style x:Key="RoundedButtonStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                        CornerRadius="{StaticResource ButtonCornerRadius}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{StaticResource BorderBrush}"
                        BorderThickness="{StaticResource BorderThick-1}">
                        <ContentPresenter HorizontalAlignment="Center" 
                                      VerticalAlignment="Center"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="0.9"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="0.8"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 🔹 Default Button Style -->
    <Style x:Key="GeneralButtonStyle" 
       TargetType="Button" 
       BasedOn="{StaticResource RoundedButtonStyle}">
        <Setter Property="Background" Value="{StaticResource GeneralButtonBackgroundColor}"/>
        <Setter Property="Foreground" Value="{StaticResource GeneralButtonForegroundColor}"/>
        <Setter Property="FontWeight" Value="{StaticResource FontWeight-3}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSize-3}"/>
        <Setter Property="Height" Value="{StaticResource ButtonHeight-1}"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource PrimaryDarkBrush}"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderBrush" Value="{StaticResource PrimaryDarkBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource PrimaryDarkBrush}"/>
                <!-- Darker when clicked -->
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- 🔹 Active Button (e.g. selected menu item) -->
    <Style x:Key="GeneralButtonActiveStyle" 
       TargetType="Button" 
       BasedOn="{StaticResource GeneralButtonStyle}">
        <Setter Property="Background" Value="{StaticResource PrimaryDarkBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryDarkBrush}"/>
    </Style>

    <Style x:Key="SidebarButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="15,10"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#E0E0E0"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Active Button Style -->
    <Style x:Key="ActiveSidebarButtonStyle" BasedOn="{StaticResource SidebarButtonStyle}" TargetType="Button">
        <Setter Property="Background" Value="#007ACC"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>


    <!-- ========================base button styel=========================-->

    <!-- Base Icon Button Template -->
    <Style x:Key="BaseRoundedButton" TargetType="Button">
        <!-- Consistent Size -->
        <Setter Property="Width" Value="140"/>
        <Setter Property="Height" Value="45"/>

        <!-- Common Typography -->
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="{StaticResource FontWeight-3}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSize-3}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <!-- Template with icon + text -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                            CornerRadius="{StaticResource ButtonCornerRadius}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <StackPanel Orientation="Horizontal"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    Margin="10,0">
                            <!-- Icon -->
                            <Image x:Name="Icon"
                               Width="25"
                               Height="25"
                               Margin="0,0,4,0"
                               Stretch="Uniform"
                               Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag, Mode=OneWay}"
                               RenderOptions.BitmapScalingMode="HighQuality"/>

                            <!-- Text -->
                            <ContentPresenter VerticalAlignment="Center"
                                              HorizontalAlignment="Center"
                                              RecognizesAccessKey="True"/>
                        </StackPanel>
                    </Border>

                    <!-- Visual States -->
                    <ControlTemplate.Triggers>
                        <!-- Hover -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="0.9"/>
                            <Setter TargetName="border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Black" BlurRadius="8" ShadowDepth="1" Opacity="0.25"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <!-- Pressed -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="0.8"/>
                            <Setter TargetName="border" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="border" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.97" ScaleY="0.97"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <!-- Disabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="#CCCCCC"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter TargetName="Icon" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Save Button -->
    <Style x:Key="SaveButtonStyle"
           BasedOn="{StaticResource BaseRoundedButton}"
           TargetType="Button">
        <Setter Property="Background" Value="#2E7D32"/>
        <Setter Property="BorderBrush" Value="#2E7D32"/>
        <Setter Property="Tag" Value="/Resources/right.png"/>
    </Style>

    <!--  Delete Button -->
    <Style x:Key="DeleteButtonStyle"
           BasedOn="{StaticResource BaseRoundedButton}"
           TargetType="Button">
        <Setter Property="Background" Value="#a82828"/>
        <Setter Property="BorderBrush" Value="#a82828"/>
        <Setter Property="Tag" Value="/Resources/delete.png"/>
    </Style>

</ResourceDictionary>